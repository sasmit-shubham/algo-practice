class MyStack {
public:
    queue<int>q1;
    queue<int>q2;
    MyStack() {
        q1.empty();
        q2.empty();
    }
    
    void push(int x) {
        if(!q1.empty()){
            q1.push(x);
        }else{
            q2.push(x);
        }
    }
    
    int pop() {
        int remove=0;
        
        if(q1.empty()){
            
            int x = q2.size();
            while(x--){
                if(x!=0){
                    int t= q2.front();
                    q2.pop();
                    q1.push(t);
                }else{
                    remove = q2.front();
                    q2.pop();
                    
                }
            }
        }else{
            // cout<<" shubham "<<endl;
            int x = q1.size();
            while(x--){
                if(x!=0){
                    int t = q1.front();
                    // cout<<t<<endl;
                    q1.pop();
                    q2.push(t);
                }else{
                    remove = q1.front();
                    // cout<<remove<<endl;
                    q1.pop();
                }
            }
            
        }
        return remove;
    }
                                       
    int top() {
        
        if(q1.empty()){
            int x = q2.size();
            while(x--){
                if(x!=0){
                    int t= q2.front();
                    q2.pop();
                    q1.push(t);
                }
                if(x==0){
                    int t= q2.front();
                    q2.pop();
                    q1.push(t);
                    return t;
                }
            }
        }else{
            int x = q1.size();
            while(x--){
                if(x!=0){
                    int t= q1.front();
                    q1.pop();
                    q2.push(t);
                }
                
                if(x==0){
                    int t= q1.front();
                    q1.pop();
                    q2.push(t);
                    return t;
                }
            }
            
        }
        return 0;
        
    }
    
    bool empty() {
        if(q1.empty() and q2.empty()){
            return true;
        }else{
            return false;
        }
    }
};

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack* obj = new MyStack();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->top();
 * bool param_4 = obj->empty();
 */
