class Solution {
public:
    int wiggleMaxLength(vector<int>& v){
      int n = v.size();
      vector<pair<int,char>>dp(n+1,{-1,'p'});
      dp[0] = {1,'p'};
      int mx = 1;
      for(int i=1; i<n; i++){
         for(int j=i-1; j>0; j--){
             if((v[i]-v[j])>0 and dp[j].second=='-'){
                 dp[i] = {dp[j].first+1,'+'};
                 break;
             }
             if((v[i]-v[j])<0 and dp[j].second=='+'){
                 dp[i] = {dp[j].first+1,'-'};
                 break;
             }
         }
         if(dp[i].first== -1){
             
             if(v[i]>v[0]){
                 
                 dp[i] = {2,'+'};
             }
             if(v[i]<v[0]){
                 dp[i] = {2,'-'};
             }
         }
          
          mx = max(mx,dp[i].first);
          
      }
        
      // for(int i=0; i<n; i++){
      //     cout<<dp[i].first<<" "<<dp[i].second<<endl;
      // }

      return mx;
    }
};



