/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
    int solve(TreeNode* root){
        if(root==NULL) return 0;
        
        return 1+ max(solve(root->left),solve(root->right));
    }
    
    void inorder(TreeNode* root,int &mx){
        if(root==NULL) return;
       int left = solve(root->left);
       int right = solve(root->right);
       mx = max(left+right,mx); 
        inorder(root->left,mx);
        inorder(root->right,mx);
       
    }
    int diameterOfBinaryTree(TreeNode* root) {
        int mx= INT_MIN;
       inorder(root,mx);
        
        return mx;
    }
};
