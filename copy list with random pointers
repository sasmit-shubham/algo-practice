/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if (head == nullptr) {
            return head;
        }
        if (h.find(head) != h.end()) {
            return h[head];
        }
        Node* new_node = new Node(head->val);
        h[head] = new_node;
        h[head]->next = copyRandomList(head->next);   
        h[head]->random = copyRandomList(head->random);   
        return h[head];    
    }
private:
    unordered_map<Node*, Node*> h;
};
