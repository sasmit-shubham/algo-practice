/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        
        if(root==NULL)return 0;
        queue<pair<TreeNode*,int>>q;
        q.push({root,0});
        int t=0;
        while(!q.empty()){
            // cout<<" shubham "<<endl;
            pair<TreeNode*,int> x = q.front();
            q.pop();
            // cout<<x.second<<" "<<t<<endl;
            if(x.first->left==NULL and x.first->right==NULL){
                return x.second+1;
            }
            if(x.first->left!=NULL){
                q.push({x.first->left,x.second+1});   
            }
            if(x.first->right!=NULL){
                q.push({x.first->right,x.second+1});
            }
            
                       
        }
        return -1;
    }
};
