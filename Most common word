class Solution {
public:
    bool isSymbol(char c){
        if((c>='a' and c<='z') or (c>='A' and c<='Z')) return false;
        return true;
    }
    string mostCommonWord(string paragraph, vector<string>& banned) {
        sort(banned.begin(),banned.end());
        unordered_map<string,int>mp;
        
        int i=0;
        
        while(i<paragraph.size()){
            string s;
            while(i<paragraph.size() and isSymbol(paragraph[i])==false){
                s.push_back(tolower(paragraph[i]));
                i++;
            }
            // cout<<s<<endl;
            if(binary_search(banned.begin(),banned.end(),s)==false){
                mp[s]++;
            }
            while(i<paragraph.size() and isSymbol(paragraph[i])){
                i++;
            }
        }
        
        int mx = INT_MIN;
        string ans;
        
        for(auto x: mp){
            if(x.second>mx){
                mx = x.second;
                ans = x.first;
            }
        }
        
        return ans;
    }
};
