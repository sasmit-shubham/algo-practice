class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& grid) {
        int n = grid.size();
        int m = grid[0].size();
        int dp[n][m];
        
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(grid[i][j]==1){
                    dp[i][j] =0;
                    continue;
                }
                if(i==0 and j==0){
                    dp[i][j] =1;
                }else if(i==0){
                    dp[i][j] = dp[i][j-1];
                }else if(j==0){
                    dp[i][j] = dp[i-1][j];
                }else{
                    dp[i][j] = 0;
                }
            }
        }
        
        int ans =0;
        
        for(int i=1; i<n; i++){
            for(int j=1; j<m; j++){
                if(grid[i][j]==1){
                    dp[i][j]=0;
                    continue;
                }
                dp[i][j] = dp[i-1][j]+dp[i][j-1];
            }
        }
        
        return dp[n-1][m-1];
    }
};
