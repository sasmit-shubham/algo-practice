class Solution {
public:
    void per(vector<int> nums, int left, int right, vector<vector<int>>&ans){
        if(left>right){ // check once more
            ans.push_back(nums);
            return;
        }
        unordered_map<int,int>mp;
        for(int i=left; i<=right; i++){
            if(mp.count(nums[i])) continue;
            mp[nums[i]]++;
            swap(nums[i],nums[left]);
            per(nums,left+1,right,ans);
            swap(nums[i],nums[left]);
        }
        
    }
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int>>ans;
        int i=0;
        int n= nums.size();
        per(nums,i,n-1,ans);
        return ans;
    }
};
