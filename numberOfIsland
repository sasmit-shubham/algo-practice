class Solution {
public:
    int dx[4] = {0,0,-1,1};
    int dy[4] = {1,-1,0,0};
    int m,n;
    bool ok(int i, int j){
        return i<n and j<m and i>=0 and j>=0;
    }
    void dfs(vector<vector<char>>& grid,int i, int j){
        grid[i][j]='0';   
        for(int k=0; k<4; k++){
            if(ok(i+dx[k],j+dy[k]) and grid[i+dx[k]][j+dy[k]]=='1'){
                dfs(grid,i+dx[k],j+dy[k]);
            }
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        int ans =0;
        if(grid.size()==0){
            return 0;
        }
        n = grid.size();
        m = grid[0].size();
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(grid[i][j]=='1'){
                    ans++;
                    dfs(grid,i,j);
                }
            }
        }
        
        return ans;
        
    }
};
