int dx[4] = {0,0,1,-1};
int dy[4] = {1,-1,0,0};
int n,m;
bool ok(int i, int j){
    return i>=0 and j>=0 and i<n and j<m;
}

void dfs(vector<vector<int>> &image, int i, int j,int newColor, int source){
    image[i][j] = newColor;
    for(int k=0; k<4; k++){
        if(ok(dx[k]+i,dy[k]+j) and image[dx[k]+i][dy[k]+j]==source){
            dfs(image,dx[k]+i,dy[k]+j,newColor,source);
        }
    }
}
class Solution {
public:    
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        if(image[sr][sc]==newColor)
            return image;
        n = image.size();
        m = image[0].size();
        vector<vector<bool>>vis(n,vector<bool>(m,false));
        dfs(image,sr,sc,newColor,image[sr][sc]);
        return image;
    }
};
