class Solution {
public:
    int maxProduct(vector<int>& nums) {
        int mx  = INT_MIN;
        int prev_mul =1;
        bool flag = false;
        int odd_cnt =0;
        int odd_idx =0;
        int mul =1;
        int n = nums.size();
        for(int i=0; i<n; i++){
           if(nums[i]==0){
               mx = max(mx,0);
               mul = 1;
               odd_cnt=0;
               prev_mul = 1;
               continue;
           }else if(nums[i]<0){
               odd_cnt++;
               if(odd_cnt == 1){
                   prev_mul*=nums[i];
               }
               if(odd_cnt&1 and odd_cnt!=1){
                   mx= max(mul/prev_mul,mx);
               }
               mul*=nums[i];
           }else{
               mul*=nums[i];
               if(odd_cnt==0){
                   prev_mul*=nums[i];
               }
           }
            
           mx = max(mul,mx);
           if(odd_cnt&1){
               if(odd_cnt==1 and nums[i]<0)
                   continue;
               mx= max(mul/prev_mul,mx);
           }
        }
        return mx;
    }
};
