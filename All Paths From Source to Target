class Solution {
public:
    void dfs(vector<vector<int>>&graph, vector<bool>&vis, vector<int>v,int curr,vector<vector<int>>&ans){

        v.push_back(curr);
        if(curr==(graph.size()-1)){
            ans.push_back(v);
            return;
        }
        
        for(int it: graph[curr]){
                dfs(graph,vis,v,it,ans);
            
        }
        v.pop_back();
    }
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        vector<vector<int>>ans;
        int n = graph.size();
        vector<bool>vis(n+1,false);
        vector<int>v;
        dfs(graph,vis,v,0,ans);
        return ans;
        
    }
};
