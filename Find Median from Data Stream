class MedianFinder {
public:
    priority_queue<int>maxHeap;
    priority_queue<int,vector<int>,greater<int>>minHeap;
    
    MedianFinder() {

        
    }
    
    void addNum(int num) {
        maxHeap.push(num);
        int x = maxHeap.top();
        minHeap.push(x);
        maxHeap.pop();
        
        // difference of size of both should not increase more than one
        
        if(minHeap.size()>maxHeap.size()){
            maxHeap.push(minHeap.top());
            minHeap.pop();
        }
    }
    
    double findMedian() {
               if(minHeap.size() == maxHeap.size()){
            return (maxHeap.top()+minHeap.top())/2.0;
        }
        
        return maxHeap.top();
        
    }
};

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder* obj = new MedianFinder();
 * obj->addNum(num);
 * double param_2 = obj->findMedian();
 */
