
class MedianFinder {
public:
    priority_queue<int>max_q;
    priority_queue<int,vector<int>,greater<int>>min_q;
    
    MedianFinder() {
        
    }
    

    
    void addNum(int num) {
        max_q.push(num);
        int x = max_q.top();
        max_q.pop();
        
        min_q.push(x);
        if(min_q.size()>max_q.size()){
            x = min_q.top();
            min_q.pop();
            max_q.push(x);
        }
        // cout<<"size_of_max "<<max_q.size()<<endl;
    }
    
    double findMedian() {
        if(max_q.size()>min_q.size()){
            return max_q.top();
        }else{
            double ans = double(max_q.top()+ min_q.top())/2;
            return ans;
        }
        
    }
};

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder* obj = new MedianFinder();
 * obj->addNum(num);
 * double param_2 = obj->findMedian();
 */
